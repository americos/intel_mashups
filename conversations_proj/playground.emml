<mashup xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xsi:schemaLocation='http://www.openmashup.org/schemas/v1.0/EMML/../schemas/EMMLPrestoSpec.xsd'
	xmlns='http://www.openmashup.org/schemas/v1.0/EMML' xmlns:macro='http://www.openmashup.org/schemas/v1.0/EMMLMacro'
	xmlns:presto='http://www.jackbe.com/v1.0/EMMLPrestoExtensions' name='davidchanassetdetail'>
	<operation name='runMashup'>
		<output name="result" type="document"></output>

		<variables>
			<variable name="dateToText" type="document" default=""></variable>
			<variable name="contains_dateToText" type="string" default=""></variable>
			<variable name="document_with_dateToText" type="document"
				default=""></variable>
			<variable name="amount" type="string" default=""></variable>
			<variable name="final_dateToText" type="string" default=""></variable>

			<variable name="stu" type="string" default=""></variable>

			<variable name="mashup_almost_ready" type="document">
				<mashupx>
					<item>
						<entry>CinemaNow, Intel Give PCs a Front Row Seat to
							Growing, Secure Library of HD Movie Content</entry>
						<datetotext>1 week, 13 hours ago</datetotext>
						<created_time>Thu, 06 Oct 2011 03:47:49 GMT</created_time>
						<source>rss</source>
						<link>http://newsroom.intel.com/community/intel_newsroom/blog/2011/10/06/cinemanow-intel-give-pcs-a-front-row-seat-to-growing-secure-library-of-hd-movie-content</link>
						<author>webadmin@intel.com</author>
						<datetotext2>Fri, 23 Sep 2011 13:11:29 GMT</datetotext2>
						<timestamp>2011-10-06T03:47:49+00:00</timestamp>
					</item>
					<item>
						<entry>Paying IT Forward</entry>
						<datetotext>1 week, 1 day ago</datetotext>
						<source>rss</source>
						<link>http://premierit.intel.com/community/ipip/blog/2011/06/28/paying-it-forward</link>
						<author>webadmin@intel.com</author>
						<created_time>Wed, 06 Jul 2011 17:19:55 GMT</created_time>
					</item>
					<item>
						<entry>Support Community Guidelines</entry>
						<datetotext>6 months, 5 days ago</datetotext>
						<source>rss</source>
						<link>http://communities.intel.com/community/tech/blog/2011/01/01/support-community-guidelines</link>
						<author>webadmin@intel.com</author>
					</item>
					<item>
						<entry>Making Life a Little Easier</entry>
						<datetotext>2 years, 1 month ago</datetotext>
						<source>rss</source>
						<link>http://communities.intel.com/community/tech/blog/2009/05/29/making-life-a-little-easier</link>
						<author>webadmin@intel.com</author>
					</item>
					<item>
						<entry>Are you buying a genuine IntelÂ® Ethernet adapter?</entry>
						<datetotext>2 years, 2 months ago</datetotext>
						<source>rss</source>
						<link>http://communities.intel.com/community/tech/blog/2009/04/17/are-you-buying-a-genuine-intel-ethernet-adapter</link>
						<author>webadmin@intel.com</author>
					</item>
				</mashupx>
			</variable>
		</variables>

		<variable name="item_counter" type="string" default="0"></variable>
		<variable name="has_datetotext" type="string" default="0"></variable>
		<variable name="items_with_texttodate_str" type="string"
			default=""></variable>
		<variable name="final_dateToText" type="string" default=""></variable>
		<variable name="items_with_texttodate_arr" type="string"
			default=""></variable>

		<script>
			<![CDATA[
				final_dateToText = [];
				items_with_texttodate_arr= [];
				//asd = "<ss>";
			]]>
		</script>

		<foreach items="$mashup_almost_ready//item" variable="item">
			<assign fromexpr="$item//datetotext/node()" outputvariable="has_datetotext" />

			<script>
			<![CDATA[
				item_counter++;
				//print("has_datetotext::"+has_datetotext+"::");
				if(has_datetotext != ""){
					//print("item: " + item_counter + " Has date to Text!");
					items_with_texttodate_arr.push( item_counter);
					
					
					var spit_dateToText = has_datetotext.split(" ")
	 	 			amount = spit_dateToText[0];
	 	 			var time = spit_dateToText[1]
	 	 			print("spit_dateToText:"+spit_dateToText + " :length:"+ spit_dateToText.length);
	 	 			print("Amount:" + amount + "::"+ " Time:" + time );
	 	 			
	 	 			//Logic for adding the dates
	 	 			var d = new Date();
	 	 			
	 	 			//Minutes
	 	 			if( time == "minutes"){
	 	 				//print("Date beofre sub:" + amount +" minutes:" + d);
	 	 				d.setMinutes(d.getMinutes() - amount);
	 	 				//print("Date AFTER sub:" + amount +" minutes:" + d);
	 	 				
	 	 				final_dateToText.push(d);
	 	 				
	 	 			}
	 	 			
	 	 			//Hours
	 	 			else if (time.indexOf("hour") != -1){
	 	 				//print("Date beofre sub:" + amount +" hours:" + d);
	 	 				d.setHours(d.getHours() - amount);
	 	 				//print("Date AFTER sub:" + amount +" hours:" + d);
	 	 				
	 	 				//Now take minutes into account.
	 	 				if(spit_dateToText.length > 4){
	 	 					var hour_minutes = spit_dateToText[2];
	 	 					print("==Going to sub minutes: " + hour_minutes);
	 	 					d.setMinutes(d.getMinutes() - hour_minutes);
	 	 				}
	 	 				
	 	 				final_dateToText.push(d)
	 	 			}

	 	 			//Days
	 	 			else if(time.indexOf("day") != -1){
	 	 				print("Date beofre sub:" + amount +" days:" + d);
	 	 				d.setDate(d.getDate() - amount);
	 	 				print("Date AFTER sub:" + amount +" days:" + d);
	 	 				
	 	 				//Now take Hours into account.
	 	 				if(spit_dateToText.length > 4){
	 	 					var hour_minutes = spit_dateToText[2];
	 	 					//print("==Going to sub Hours: " + hour_minutes);
	 	 					d.setHours(d.getHours() - hour_minutes);
	 	 				}
	 	 				
	 	 				final_dateToText.push(d)
	 	 			}
	 	 			
	 	 			//Weeks
	 	 			else if(time.indexOf("week") != -1){
	 	 				print("Date beofre sub:" + amount +" week:" + d);
	 	 				d.setDate(d.getDate() - (amount * 7));
	 	 				print("Date AFTER sub:" + amount +" week:" + d);
	 	 				
	 	 				//Now take days into account.
	 	 				if(spit_dateToText.length > 4){
	 	 					var week_day = spit_dateToText[2];
	 	 					print("==Going to sub day: " + week_day);
	 	 					d.setDate(d.getDate() - week_day);
	 	 					
	 	 				}
	 	 				
	 	 				final_dateToText.push(d)
	 	 			}
	 	 			
	 	 			//Months
	 	 			else if(time.indexOf("month") != -1){
	 	 				print("Date beofre sub:" + amount +" month:" + d);
	 	 				d.setMonth(d.getMonth() - amount );
	 	 				print("Date AFTER sub:" + amount +" month:" + d);
	 	 				
	 	 				//Now take days into account.
	 	 				if(spit_dateToText.length > 4){
	 	 					var month_day = spit_dateToText[2];
	 	 					print("==Going to sub day: " + month_day);
	 	 					d.setDate(d.getDate() - month_day);
	 	 					
	 	 				}
	 	 				
	 	 				final_dateToText.push(d)
	 	 			}
	 	 			
	 	 			//Years
	 	 			else if(time.indexOf("year") != -1){
	 	 				print("Date beofre sub:" + amount +" year:" + d);
	 	 				d.setFullYear(d.getFullYear() - amount );
	 	 				print("Date AFTER sub:" + amount +" year:" + d);
	 	 				
	 	 				//Now take months into account.
	 	 				if(spit_dateToText.length > 4){
	 	 					var year_month = spit_dateToText[2];
	 	 					print("==Going to sub day: " + year_month);
	 	 					d.setMonth(d.getMonth() - year_month);
	 	 					
	 	 				}
	 	 				
	 	 				final_dateToText.push(d)
	 	 			}
	 	 			
	 	 			
	 	 			else{
	 	 				//So just 1 minutes away... set todays date.
	 	 				final_dateToText.push(d)
	 	 			}
	 	 			
	 	 			//asd = asd + "<a>"+ item_counter +"</a>";
				}
				else{
					//print("item: " + item_counter + " DONT date to Text");
				}
				
				print("final_dateToText:" +final_dateToText);
				
				
			]]>
			</script>
		</foreach>

		<script>
		<![CDATA[
			//asd = asd + "</ss>";
		
			//LOGIC for creating date in format: Tue, 19 Oct 2010 15:32:53 GMT
 	 		//stu = "<aa>";
 	 		var date_to_manipulate = "";
 	 		var date_to_manipulate_strip = "";
 	 		var new_date = ""
 	 		
 	 		var new_date_arr = []
 	 		
 	 		for(var i =0; i< final_dateToText.length; i++){
 	 			date_to_manipulate = final_dateToText[i].toString();
 	 			date_to_manipulate_strip = date_to_manipulate.split(" ");
 	 			//print("date_to_manipulate_strip:"+date_to_manipulate_strip); //Tue,Jun,28,2011,16:37:06,GMT-0400,(EDT) 
 	 			//I get : Tue Jun 28 2011 16:32:28 GMT-0400 (EDT)
 	 			//I need: Tue, 19 Oct 2010 15:32:53 GMT
 	 			
 	 			new_date = date_to_manipulate_strip[0] + ", " + date_to_manipulate_strip[2] + " " + date_to_manipulate_strip[1] + " " + date_to_manipulate_strip[3] + " " +date_to_manipulate_strip[4] + " GMT" 
 	 			
 	 			new_date_arr.push(new_date);
 	 			
 	 			//stu = stu + "<a>"+new_date+"</a>"
 	 		}
 	 		//stu = stu + "</aa>"
 	 		
 	 		print("new_date_arr:" + new_date_arr);
 	 		print("items_with_texttodate_arr:" + items_with_texttodate_arr);
 	 		
 	 		//Crear emml para que haga el annotate
 	 		
		]]>
		</script>




	</operation>
</mashup>